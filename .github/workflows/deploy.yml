name: Deploy All Instances

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The semantic version to use to generate a new release'
        required: true
        type: string

jobs:
  deploy-appdemo:
    runs-on: arc-runner-set
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Assume Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        output-credentials: false
        aws-region: us-east-1
    - name: Google Aplication Credentials
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        secret-ids: |
          GOOGLE_APPLICATION_CREDENTIALS_JSON,hoop/google-application-credentials
    - name: Customer App Secrets
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        parse-json-secrets: true
        secret-ids: |
          hoop/self-hosted/appdemo
    - name: Populate App Values
      run: ( echo "cat <<EOF" ; cat ./infra/appdemo/values.yml ; echo EOF ) | sh > ./values-appdemo.yml
    - name: Upgrade App
      run: |-
        helm upgrade --install hoop https://hoopartifacts.s3.amazonaws.com/release/${{ inputs.version }}/hoop-chart-${{ inputs.version }}.tgz \
          -f ./values-appdemo.yml \
          --set image.gw.tag=${{ inputs.version }} \
          --wait \
          -n appdemo
  deploy-clari:
    runs-on: arc-runner-set
    needs: [deploy-appdemo]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Assume Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        output-credentials: false
        aws-region: us-east-1
    - name: Google Aplication Credentials
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        secret-ids: |
          GOOGLE_APPLICATION_CREDENTIALS_JSON,hoop/google-application-credentials
    - name: Customer App Secrets
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        parse-json-secrets: true
        secret-ids: |
          hoop/self-hosted/clari
    - name: Populate App Values
      run: ( echo "cat <<EOF" ; cat ./infra/clari/values.yml ; echo EOF ) | sh > ./values-clari.yml
    - name: Upgrade App
      run: |-
        helm upgrade --dry-run --install hoop https://hoopartifacts.s3.amazonaws.com/release/${{ inputs.version }}/hoop-chart-${{ inputs.version }}.tgz \
          -f ./values-clari.yml \
          --set image.gw.tag=${{ inputs.version }} \
          --wait \
          -n clari
  deploy-ebanx:
    runs-on: arc-runner-set
    needs: [deploy-appdemo]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Assume Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        output-credentials: false
        aws-region: us-east-1
    - name: Google Aplication Credentials
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        secret-ids: |
          GOOGLE_APPLICATION_CREDENTIALS_JSON,hoop/google-application-credentials
    - name: Customer App Secrets
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        parse-json-secrets: true
        secret-ids: |
          hoop/self-hosted/ebanx
    - name: Populate App Values
      run: ( echo "cat <<EOF" ; cat ./infra/ebanx/values.yml ; echo EOF ) | sh > ./values-ebanx.yml
    - name: Upgrade App
      run: |-
        helm upgrade --install hoop https://hoopartifacts.s3.amazonaws.com/release/${{ inputs.version }}/hoop-chart-${{ inputs.version }}.tgz \
          -f ./values-ebanx.yml \
          --set image.gw.tag=${{ inputs.version }} \
          --wait \
          -n ebanx
  deploy-enjoei:
    runs-on: arc-runner-set
    needs: [deploy-appdemo]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Assume Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        output-credentials: false
        aws-region: us-east-1
    - name: Google Aplication Credentials
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        secret-ids: |
          GOOGLE_APPLICATION_CREDENTIALS_JSON,hoop/google-application-credentials
    - name: Customer App Secrets
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        parse-json-secrets: true
        secret-ids: |
          hoop/self-hosted/enjoei
    - name: Populate App Values
      run: ( echo "cat <<EOF" ; cat ./infra/enjoei/values.yml ; echo EOF ) | sh > ./values-enjoei.yml
    - name: Upgrade App
      run: |-
        helm upgrade --install hoop https://hoopartifacts.s3.amazonaws.com/release/${{ inputs.version }}/hoop-chart-${{ inputs.version }}.tgz \
          -f ./values-enjoei.yml \
          --set image.gw.tag=${{ inputs.version }} \
          --wait \
          -n enjoei
  deploy-rdstation:
    runs-on: arc-runner-set
    needs: [deploy-appdemo]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Assume Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        output-credentials: false
        aws-region: us-east-1
    - name: Google Aplication Credentials
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        secret-ids: |
          GOOGLE_APPLICATION_CREDENTIALS_JSON,hoop/google-application-credentials
    - name: Customer App Secrets
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        parse-json-secrets: true
        secret-ids: |
          hoop/self-hosted/rdstation
    - name: Populate App Values
      run: ( echo "cat <<EOF" ; cat ./infra/rdstation/values.yml ; echo EOF ) | sh > ./values-rdstation.yml
    - name: Upgrade App
      run: |-
        helm upgrade --install hoop https://hoopartifacts.s3.amazonaws.com/release/${{ inputs.version }}/hoop-chart-${{ inputs.version }}.tgz \
          -f ./values-rdstation.yml \
          --set image.gw.tag=${{ inputs.version }} \
          --wait \
          -n rdstation
  deploy-tryrunops:
    runs-on: arc-runner-set
    needs: [deploy-appdemo]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Assume Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        output-credentials: false
        aws-region: us-east-1
    - name: Google Aplication Credentials
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        secret-ids: |
          GOOGLE_APPLICATION_CREDENTIALS_JSON,hoop/google-application-credentials
    - name: Customer App Secrets
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        parse-json-secrets: true
        secret-ids: |
          hoop/self-hosted/tryrunops
    - name: Populate App Values
      run: ( echo "cat <<EOF" ; cat ./infra/tryrunops/values.yml ; echo EOF ) | sh > ./values-tryrunops.yml
    - name: Upgrade App
      run: |-
        helm upgrade --install hoop https://hoopartifacts.s3.amazonaws.com/release/${{ inputs.version }}/hoop-chart-${{ inputs.version }}.tgz \
          -f ./values-tryrunops.yml \
          --set image.gw.tag=${{ inputs.version }} \
          --wait \
          -n tryrunops
  deploy-unico:
    runs-on: arc-runner-set
    needs: [deploy-appdemo]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Assume Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        output-credentials: false
        aws-region: us-east-1
    - name: Google Aplication Credentials
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        secret-ids: |
          GOOGLE_APPLICATION_CREDENTIALS_JSON,hoop/google-application-credentials
    - name: Customer App Secrets
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        parse-json-secrets: true
        secret-ids: |
          hoop/self-hosted/unico
    - name: Populate App Values
      run: ( echo "cat <<EOF" ; cat ./infra/unico/values.yml ; echo EOF ) | sh > ./values-unico.yml
    - name: Upgrade App
      run: |-
        helm upgrade --install hoop https://hoopartifacts.s3.amazonaws.com/release/${{ inputs.version }}/hoop-chart-${{ inputs.version }}.tgz \
          -f ./values-unico.yml \
          --set image.gw.tag=${{ inputs.version }} \
          --wait \
          -n unico
  deploy-multitenant:
    runs-on: arc-runner-set
    needs: [deploy-appdemo]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Assume Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        output-credentials: false
        aws-region: us-east-1
    - name: Google Aplication Credentials
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        secret-ids: |
          GOOGLE_APPLICATION_CREDENTIALS_JSON,hoop/google-application-credentials
    - name: Customer App Secrets
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        parse-json-secrets: true
        # this secret id does not make sense,
        # we should migrate the names to something more aligned with
        # with self-hosted and multi tenant environments, e.g.: hoop/gateway-secrets/<environment>
        secret-ids: |
          hoop/self-hosted/multitenant
    - name: Populate App Values
      run: ( echo "cat <<EOF" ; cat ./infra/multitenant/values.yml ; echo EOF ) | sh > ./values-multitenant.yml
    - name: Upgrade App
      run: |-
        helm upgrade --install hoop https://hoopartifacts.s3.amazonaws.com/release/${{ inputs.version }}/hoop-chart-${{ inputs.version }}.tgz \
          -f ./values-multitenant.yml \
          --set image.gw.tag=${{ inputs.version }} \
          --wait \
          -n multitenant
