name: hoop

services:
  db:
    image: postgres:16
    networks:
      - hoopdev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hoopdb
      # avoid errors on healthcheck
      PGUSER: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "zitadel", "-U", "postgres"]
      interval: "2s"
      timeout: "30s"
      retries: 10
      start_period: "20s"
  gateway:
    image: hoophq/hooplabs
    environment:
      - API_URL=http://127.0.0.1:8009
      - GRPC_URL=http://127.0.0.1:8010
      - LOG_LEVEL=info
      - LOG_ENCODING=console
      - GIN_MODE=release
      - PLUGIN_AUDIT_PATH=/opt/hoop/sessions
      - PLUGIN_INDEX_PATH=/opt/hoop/sessions/indexes
      - STATIC_UI_PATH=/opt/hoop/webapp/public
      - MIGRATION_PATH_FILES=/opt/hoop/migrations
      - POSTGRES_DB_URI=postgres://postgres:postgres@db:5432/hoopdb?sslmode=disable
    env_file: ".env"
    command: ["hoop", "start", "gateway"]
    ports:
      - "8009:8009"
      - "8010:8010"
    networks:
      - hoopdev
    depends_on:
      db:
        condition: "service_healthy"
    healthcheck:
      test: "curl http://127.0.0.1:8009/api/healthz"
      interval: "2s"
      timeout: "30s"
      retries: 10
      start_period: "20s"
  agent:
    image: hoophq/hooplabs
    # uncomment the following lines to test the local script
    # volumes:
    #   - ./rootfs/usr/local/bin/run-agent.sh:/usr/local/bin/run-agent.sh
    networks:
      - hoopdev
    environment:
      - POSTGRES_DB_URI=postgres://postgres:postgres@db:5432/hoopdb?sslmode=disable
      - LOG_LEVEL=info
      - LOG_ENCODING=console
    depends_on:
      gateway:
        condition: "service_healthy"
    command: run-agent.sh

networks:
  hoopdev:

