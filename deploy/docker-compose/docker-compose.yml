name: hoop

services:
  db:
    image: postgres:17.6
    networks:
      - hoopdev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hoopdb
      PGUSER: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "postgres"]
      interval: "2s"
      timeout: "30s"
      retries: 10
      start_period: "20s"
  gateway:
    image: hoophq/hoop
    environment:
      - GIN_MODE=release
      - POSTGRES_DB_URI=postgres://postgres:postgres@db:5432/hoopdb?sslmode=disable
      - DLP_PROVIDER=mspresidio
      - DLP_MODE=best-effort
      - MSPRESIDIO_ANALYZER_URL=http://presidio-analyzer:3000
      - MSPRESIDIO_ANONYMIZER_URL=http://presidio-anonymizer:3000
    env_file: ".env"
    command: ["hoop", "start", "gateway"]
    ports:
      - "8009:8009"
      - "8010:8010"
      - "15432:15432"
      - "12222:12222"
    networks:
      - hoopdev
    depends_on:
      db:
        condition: "service_healthy"
    healthcheck:
      test:
      - CMD-SHELL
      - |
        PROTO=http; [ -n "$$TLS_KEY" ] && PROTO=https
        curl -k -f $$PROTO://127.0.0.1:8009/api/healthz || exit 1
      interval: "2s"
      timeout: "30s"
      retries: 10
      start_period: "20s"
  agent:
    image: hoophq/hoopdev
    networks:
      - hoopdev
    env_file: ".env"
    environment:
      - POSTGRES_DB_URI=postgres://postgres:postgres@db:5432/hoopdb?sslmode=disable
      - DEFAULT_AGENT_GRPC_HOST=gateway:8010
    depends_on:
      gateway:
        condition: "service_healthy"
    command: hoop-default-agent.sh

  presidio-analyzer:
    image: mcr.microsoft.com/presidio-analyzer:2.2.360
    networks:
      - hoopdev
    depends_on:
      gateway:
        condition: "service_healthy"

  presidio-anonymizer:
    image: mcr.microsoft.com/presidio-anonymizer:2.2.360
    networks:
      - hoopdev
    depends_on:
      gateway:
        condition: "service_healthy"

networks:
  hoopdev:

