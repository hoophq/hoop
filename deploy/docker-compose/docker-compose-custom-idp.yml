name: hoop

services:
  bootstrap:
    image: nginx:1.27.0
    volumes:
    - ./hoopdata:/hoopdata
    environment:
    - HOOP_PUBLIC_HOSTNAME=${HOOP_PUBLIC_HOSTNAME}
    command: /hoopdata/bootstrap.sh
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hoopdb
      # avoid errors on healthcheck
      PGUSER: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "zitadel", "-U", "postgres"]
      interval: '2s'
      timeout: '30s'
      retries: 10
      start_period: '20s'
  nginx:
    image: nginx:1.27.0
    command:
    - /bin/bash
    - -c
    - |
      mkdir -p /etc/certs
      cp /hoopdata/tls/server.crt /etc/certs/server.crt
      cp /hoopdata/tls/server.key /etc/certs/server.key
      sed "s|HOOP_PUBLIC_HOSTNAME_PLACEHOLDER|${HOOP_PUBLIC_HOSTNAME}|g" /hoopdata/tls/nginx-custom-idp.conf > /etc/nginx/nginx.conf
      /docker-entrypoint.sh nginx -g "daemon off;"
    volumes:
    - ./hoopdata/tls/:/hoopdata/tls/
    depends_on:
    - gateway
    ports:
    - 443:443
  gateway:
    image: hoophq/hoop
    platform: linux/amd64
    environment:
    - LOG_LEVEL=info
    - LOG_ENCODING=console
    - GIN_MODE=release
    - PLUGIN_AUDIT_PATH=/hoopdata/sessions
    - PLUGIN_INDEX_PATH=/hoopdata/sessions/indexes
    - POSTGRES_DB_URI=postgres://postgres:postgres@db:5432/hoopdb?sslmode=disable
    - API_URL=https://app.${HOOP_PUBLIC_HOSTNAME}
    - GRPC_URL=grpcs://${HOOP_PUBLIC_HOSTNAME}:443
    env_file: '.env'
    volumes:
    - ./hoopdata:/hoopdata/
    - ./hoopdata/tls/ca.crt:/etc/ssl/certs/ca-certificates.crt:ro
    command: hoop start gateway
    ports:
    - 8009:8009
    - 8010:8010
    depends_on:
      bootstrap:
        condition: service_completed_successfully
  agent:
    image: hoophq/hoopdev
    platform: linux/amd64
    volumes:
    - ./hoopdata/tls/ca.crt:/etc/ssl/certs/ca-certificates.crt:ro
    environment:
    - LOG_LEVEL=info
    - LOG_ENCODING=console
    depends_on:
    - gateway
    command:
    - /bin/bash
    - -c
    - |
      until curl -k -s -f -o /dev/null "http://gateway:8009/api/healthz"
      do
        sleep 2
      done
      export SECRET_KEY=xagt-$(LC_ALL=C tr -dc A-Za-z0-9_ < /dev/urandom | head -c 43 | xargs)
      set -eo pipefail
      export SECRET_KEY_HASH=$(printenv SECRET_KEY | tr -d '\n' | sha256sum | awk {'print $1'})
      psql -v ON_ERROR_STOP=1 "postgres://postgres:postgres@db:5432/hoopdb?sslmode=disable" <<EOF
      BEGIN;
      DELETE FROM agents WHERE name = 'system';
      INSERT INTO agents (id, org_id, name, mode, key_hash, status)
          VALUES ('CB2D463F-B2D2-4FE4-B612-76444C85166C', (SELECT id from private.orgs), 'system', 'standard', '$(printenv SECRET_KEY_HASH | tr -d "\n")', 'DISCONNECTED')
          ON CONFLICT DO NOTHING;
      COMMIT;
      EOF
      export HOOP_KEY=grpcs://system:$(printenv SECRET_KEY | tr -d '\n')@app.${HOOP_PUBLIC_HOSTNAME}:443?mode=standard
      hoop start agent

